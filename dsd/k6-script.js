// Auto-generated by the postman-to-k6 converter

import "./libs/shim/core.js";
import "./libs/shim/expect.js";
import "./libs/shim/urijs.js";

export let options = { maxRedirects: 4 };

const Request = Symbol.for("request");
postman[Symbol.for("initial")]({
  options,
  environment: {
    BaseURL: "qa3.nslhub.com",
    IamURL: "https://qaiam.nslhub.com",
    SuperAdminTenant: "Super-Admin",
    TenantName: "apiqa0504",
    TenantAdmin: "admin@nslhub.com",
    AdminPassword: "admin",
    CCORoleId: 1841833683818,
    RoleCCO: "CCO",
    UserCCOManager: "userccomanager",
    UserCCO: "usercco",
    UserCCOId: 322589991331,
    UserCCO1: "usercco1",
    UserCCO1Id: 1972120016659,
    CCHRoleId: 234529237640,
    RoleCCH: "CCH",
    UserCCH: "usercch",
    RoleCCA: "CCA",
    UserCCA: "usercca",
    Password: "test",
    BearerToken: "undefined undefined",
    TenantName2: "apiqaei0504",
    TenantAdmin2: "admin@nslhub.com",
    AdminPassword2: "admin",
    DsdFileStoreURL: "https://ava-nlg-dev.nslhub.com",
    RefreshToken: null,
    WaitTime: 30000,
    NUMBER: "",
    COUNT: "",
    UserCCOEmailId: "usercco@nslhub.com",
    UserCCO1EmailId: "usercco1@nslhub.com",
    UserCCOManagerEmailId: "userccomanager@nslhub.com",
    UserCCAId: 2044956951239,
    UserCCA1Id: 2043386291967,
    UserCCA1: "usercca1",
    CCARoleId: 368848764661,
    UserCCOManagerId: 2119243203126,
    UserCCH1: "usercch1",
    OuCCO: "oucco",
    OuCCOId: "191876919025",
    UserOuCCO: "useroucco",
    UserOuCCO1: "useroucco1",
    UserOuCCOId: 1657502426387,
    UserOuCCOId1: 668079088379,
    GN: "",
    SolutionPublisher: "SolutionPublisher",
    SolutionPublisherId: 824925532392,
    TenantNameStage: "apiqa0504stage",
    TenantNameProd: "apiqa0504prod",
    TenantNameStageClientId: "apiqa0504_staging",
    UserCCHId: 398151345508,
    TraceAuditRole: "auditdata",
    TraceAuditRoleId: 1873250222640,
    AuditDesigner: "auditdesigner",
    AuditDesignerId: 1139785560613,
    AuditReviewer: "auditreviewer",
    AuditReviewerId: 996441711937,
    AuditDesignerEmailId: "auditdesigner@nslhub.com",
    SuperAdminUserName: "platformadmin@nslhub.com",
    SuperAdminPassword: "padmin@123",
    SaasTenantName: "apiqasaas0802",
    SaasUserCCO: "usercco",
    SaasUserCCOId: "1173118793932",
    SaasTenantId: 28606,
    SuperAdminUserId: "-827185515",
    SuperAdminUser: "platformadmin",
    SaasRoleCCO: "CCO",
    SaasTenantAdmin: "admin@nslhub.com",
    SaasUserCCH: "usercch",
    SaasUserCCHId: "933373429905",
    SaasRoleCCH: "CCH",
    SaasUserCCA: "usercca",
    SaasUserCCAId: "1588750292491",
    SaasRoleCCA: "CCA",
    RoleManager: "Manager",
    ManagerRoleId: 829265664407,
    RoleEmployee: "Employee",
    EmployeeRoleId: 2040409113899,
    RoleFinance: "Finance",
    FinanceRoleId: 1764637492961,
    TenantAdminId: 894878720178,
    Tenant2AdminId: 1597011094011,
    T2UserCCOId: 1386113498793,
    T2CCORoleId: 239407227356,
    EmployeeUser: "employeeuser",
    EmployeeUserId: 1917645633263,
    FinanceUser: "financeuser",
    FinanceUserId: 820077520635,
    FinanceUser1: "financeuser1",
    FinanceUserId1: "1192769182955",
    EmployeeUser1: "employeeuser1",
    EmployeeUserId1: "1228497924811",
    ManagerUser: "manageruser",
    ManagerUserId: 1732001198107,
    ManagerUser1: "manageruser1",
    ManagerUserId1: "897141596215",
    UserCCHEmailId: "usercch@nslhub.com",
    UserCCAEmailId: "usercca@nslhub.com",
    UserCCA1EmailId: "usercca1@nslhub.com",
    UserCCH1EmailId: "usercch1@nslhub.com",
    UserCCH1Id: 632745185759,
    SAASAdminUserId: "242233047416",
    SaasUserCCO1Id: "464692553728",
    SaasUserCCOManagerId: "202094916017",
    ManagerUser1Id: 1989195344420,
    FinanceUser1Id: 1829479253660,
    EmployeeUser1Id: 1178159858335,
    T2UserCCO1Id: 878542497800,
    StageAdmin: "stageadmin@nslhub.com",
    UserCCC: "userccc",
    UserCCC1: "userccc1",
    UserCCCManager: "usercccmanager",
    RoleSolutionCustomizer: "SolutionCustomizer",
    UserCCCId: "668849564311",
    UserCCC1Id: "1607519294012",
    SolutionCustomizerRoleId: "639989182448",
    T3UserCCO1Id: 405650278408,
    Tenant3AdminId: 982435399574,
    T3UserCCOId: 1424682699760,
    T3CCORoleId: 129071126100,
    TenantName3: "apiqa3ten0604",
    REVIEW_WAITTIME: "5000"
  }
});

export default function() {
  postman[Request]({
    name: "Login as usercco",
    id: "762eebe3-2a2f-4f96-b2f5-f2835454f47b",
    method: "POST",
    address:
      "{{IamURL}}/auth/realms/{{TenantName}}/protocol/openid-connect/token",
    data: {
      client_id: "{{TenantName}}",
      grant_type: "password",
      password: "{{Password}}",
      username: "{{UserCCO}}"
    },
    headers: {
      Accept: "application/json, text/plain, */*",
      "User-Agent":
        "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.198 Safari/537.36",
      "Content-Type": "application/x-www-form-urlencoded",
      "Accept-Language": "en"
    },
    pre() {
      //pm.variables.clear();

      pm.variables.set(
        "RandomNumber",
        new Date()
          .toISOString()
          .replace(/[^0-9]/g, "")
          .slice(0, -3) +
          "" +
          Math.floor(Math.random() * 100000 + 1)
      );

      // Solution Development

      pm.variables.set(
        "BookName",
        "BasicBook" + pm.variables.get("RandomNumber")
      );
      pm.variables.set(
        "SolutionName",
        "BasicSolution" + pm.variables.get("RandomNumber")
      );
      pm.variables.set("CCORoleId", pm.variables.get("CCORoleId"));
      pm.variables.set("RoleCCO", pm.variables.get("RoleCCO"));

      pm.variables.set(
        "CuName1",
        "Input1_BasicSolution " + pm.variables.get("RandomNumber")
      );
      pm.variables.set(
        "EntityName1",
        "enter_details1" + pm.variables.get("RandomNumber")
      );
      pm.variables.set("AttributeName11", "Name");
      pm.variables.set("AttributeName12", "Age");

      pm.variables.set(
        "CuName2",
        "Input2_BasicSolution " + pm.variables.get("RandomNumber")
      );
      pm.variables.set(
        "EntityName2",
        "enter_details2" + pm.variables.get("RandomNumber")
      );
      pm.variables.set("AttributeName21", "Address");
      pm.variables.set("AttributeName22", "Pin Code");

      // Solution Execution

      pm.variables.set(
        "AttributeValue11",
        "Ramya " + pm.variables.get("RandomNumber")
      );
      pm.variables.set("AttributeValue12", pm.variables.get("RandomNumber"));

      pm.variables.set(
        "AttributeValue21",
        "Hyderabad " + pm.variables.get("RandomNumber")
      );
      pm.variables.set("AttributeValue22", pm.variables.get("RandomNumber"));
    },
    post(response) {
      pm.test("Check status code", function() {
        pm.expect(pm.response.code).to.eq(200);
      });

      pm.environment.set(
        "BearerToken",
        pm.response.json().token_type + " " + pm.response.json().access_token
      );
      pm.environment.set("RefreshToken", pm.response.json().refresh_token);
    }
  });

  postman[Request]({
    name: "Create GSI-BasicSolution",
    id: "27ccb3f3-43bf-4745-9c65-9b4ebb5313e9",
    method: "POST",
    address:
      "https://{{TenantName}}.{{BaseURL}}/dsd-orch/dsd-bets-store/tenant/gsi",
    data:
      '{\r\n    "dsdId": null,\r\n    "agents": [\r\n        {\r\n            "agentType": "human"\r\n        }\r\n    ],\r\n    "attributeDesignRights": [],\r\n    "attributeTransactionRights": [],\r\n    "changeUnits": [],\r\n    "condition": "",\r\n    "contextualId": [],\r\n    "cuType": "GSI",\r\n    "dcd": [],\r\n    "description": "",\r\n    "designTimeRights": [],\r\n    "displayName": "{{SolutionName}}",\r\n    "entityDesignRights": [],\r\n    "entityTransactionRights": [],\r\n    "exceptionCUList": [],\r\n    "gsiList": [],\r\n    "guid": "",\r\n    "index": 0,\r\n    "layers": [],\r\n    "membershipList": [],\r\n    "mindCUList": [],\r\n    "name": "{{SolutionName}}",\r\n    "nextTriggerSet": [],\r\n    "ontology": [],\r\n    "ownerId": null,\r\n    "reserved": false,\r\n    "reservedCUType": "",\r\n    "solutionLogic": [],\r\n    "space": "",\r\n    "status": "DRAFT",\r\n    "dsdStatus": "DRAFT",\r\n    "subOrdinateCUList": [],\r\n    "symbolicId": "",\r\n    "txnTimeRights": [],\r\n    "userId": "",\r\n    "author": {},\r\n    "keywords": [],\r\n    "isNameUpdated": true\r\n}',
    headers: {
      Authorization: "{{BearerToken}}",
      "Accept-Language": "en"
    },
    post(response) {
      pm.test("Check status code", function() {
        pm.expect(pm.response.code).to.eq(200);
        pm.expect(pm.response.json().message).to.eq(
          pm.variables.get("SolutionName") + " is saved"
        );
        pm.expect(pm.response.json().result.status).to.eq("DRAFT");
        pm.expect(pm.response.json().result.version).to.eq("1.0");
      });

      pm.variables.set("SolutionId", pm.response.json().result.id);
      pm.variables.set("SolutionDsdId", pm.response.json().result.dsdId);
    },
    auth(config, Var) {
      config.headers.Authorization = "Bearer ";
    }
  });

  postman[Request]({
    name: "Create first CU-(Input1_BasicSolution)",
    id: "c5425eab-8efa-4202-b9ad-e2ed930d4fa8",
    method: "POST",
    address:
      "https://{{TenantName}}.{{BaseURL}}/dsd-orch/dsd-bets-store/tenant/change-unit",
    data:
      '{\r\n    "dsdId": null,\r\n    "name": "{{CuName1}}",\r\n    "agents": [\r\n        {\r\n            "agentType": "human"\r\n        }\r\n    ],\r\n    "cuType": "BASIC",\r\n    "layers": [],\r\n    "gsiList": [],\r\n    "membershipList": [],\r\n    "isReserved": false,\r\n    "status": "",\r\n    "dsdStatus": "",\r\n    "designTimeRights": [],\r\n    "txnTimeRights": [],\r\n    "displayName": "",\r\n    "description": "",\r\n    "ontology": [],\r\n    "keywords": [],\r\n    "referencedChangeUnit": null,\r\n    "index": null,\r\n    "author": {},\r\n    "ownerId": null,\r\n    "slotItemProperties": {},\r\n    "tCUConditionalPotentiality": [],\r\n    "tCUConditionalPotentialityNames": [],\r\n    "reservedCUType": "",\r\n    "isNameUpdated": true,\r\n    "uiProperties": {}\r\n}',
    headers: {
      Accept: "application/json, text/plain, */*",
      Authorization: "{{BearerToken}}",
      traceparent: "00-6635ffe94abbd976c5abdae91ec950b5-4519b868e16b030f-01",
      "User-Agent":
        "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.198 Safari/537.36",
      "Content-Type": "application/json",
      "Accept-Language": "en"
    },
    post(response) {
      pm.test("Check status code", function() {
        pm.expect(pm.response.code).to.eq(200);
        pm.expect(pm.response.json().message).to.eq(
          pm.variables.get("CuName1") + " is saved"
        );
        pm.expect(pm.response.json().result.status).to.eq("DRAFT");
        pm.expect(pm.response.json().result.version).to.eq("1.0");
      });
      pm.variables.set("CuId1", pm.response.json().result.id);
      pm.variables.set("CuDsdId1", pm.response.json().result.dsdId);
    }
  });

  postman[Request]({
    name: "Create first Entity-(enter_details1)",
    id: "926329ab-2319-42a7-9ad9-891212b0e9bc",
    method: "POST",
    address:
      "https://{{TenantName}}.{{BaseURL}}/dsd-orch/dsd-bets-store/tenant/entity",
    data:
      '{\r\n    "id": null,\r\n    "name": "{{EntityName1}}",\r\n    "isMultiValue": false,\r\n    "nslAttributes": [\r\n        {\r\n            "name": "{{AttributeName11}}",\r\n            "constraints": [],\r\n            "attributeType": {\r\n                "type": "string",\r\n                "properties": {},\r\n                "extendedProperties": {\r\n                    "sourceValues": []\r\n                },\r\n                "uiElement": {\r\n                    "name": "Text",\r\n                    "dataType": "string",\r\n                    "uiElement": "text",\r\n                    "isMulti": false,\r\n                    "properties": []\r\n                }\r\n            },\r\n            "isNameUpdated": true,\r\n            "dsdId": null\r\n        },\r\n        {\r\n            "defaultValue": null,\r\n            "name": "{{AttributeName12}}",\r\n            "constraints": [],\r\n            "attributeType": {\r\n                "type": "number",\r\n                "properties": {},\r\n                "extendedProperties": {\r\n                    "sourceValues": []\r\n                },\r\n                "uiElement": {\r\n                    "name": "Number",\r\n                    "dataType": "number",\r\n                    "uiElement": "number",\r\n                    "isMulti": false,\r\n                    "properties": []\r\n                }\r\n            },\r\n            "isNameUpdated": true,\r\n            "dsdId": null\r\n        }\r\n    ],\r\n    \r\n     "designTimeRights": [\r\n        {\r\n            "name": "{{RoleCCO}}",\r\n            "rightHolderId": {{CCORoleId}},\r\n            "rightHolderType": "ROLE",\r\n            "rightHolderName": "{{RoleCCO}}",\r\n            "decisionRight": true,\r\n            "informationRight": true,\r\n            "executionRight": false\r\n        }\r\n    ],\r\n    "txnTimeRights": [\r\n        {\r\n            "name": "{{RoleCCO}}",\r\n            "rightHolderId": {{CCORoleId}},\r\n            "rightHolderType": "ROLE",\r\n            "rightHolderName": "{{RoleCCO}}",\r\n            "decisionRight": false,\r\n            "informationRight": true,\r\n            "executionRight": true\r\n        }\r\n    ],\r\n    "keywords": [],\r\n    "ontology": [],\r\n    "status": "DRAFT",\r\n    "dsdStatus": "DRAFT",\r\n    "author": {\r\n        "name": "{{UserCCO}}"\r\n    },\r\n    "description": "",\r\n    "isNameUpdated": true,\r\n    "dsdId": null\r\n}',
    headers: {
      Authorization: "{{BearerToken}}",
      "Accept-Language": "en"
    },
    post(response) {
      pm.test("Check status code", function() {
        pm.expect(pm.response.code).to.eq(200);
        pm.expect(pm.response.json().message).to.eq(
          pm.variables.get("EntityName1") + " is saved"
        );
        pm.expect(pm.response.json().result.status).to.eq("DRAFT");
        pm.expect(pm.response.json().result.version).to.eq("1.0");
      });

      pm.variables.set("EntityId1", pm.response.json().result.id);
      pm.variables.set(
        "AttributeId11",
        pm.response.json().result.nslAttributes[0].id
      );
      pm.variables.set(
        "AttributeId12",
        pm.response.json().result.nslAttributes[1].id
      );

      pm.variables.set("EntityDsdId1", pm.response.json().result.dsdId);
      pm.variables.set(
        "AttributeDsdId11",
        pm.response.json().result.nslAttributes[0].dsdId
      );
      pm.variables.set(
        "AttributeDsdId12",
        pm.response.json().result.nslAttributes[1].dsdId
      );
    },
    auth(config, Var) {
      config.headers.Authorization = "Bearer ";
    }
  });

  postman[Request]({
    name: "Add Entity to First CU-(Input1_BasicSolution)",
    id: "f4a7fc3a-7d73-41dc-a53a-a97983c1f9d0",
    method: "POST",
    address:
      "https://{{TenantName}}.{{BaseURL}}/dsd-orch/dsd-bets-store/tenant/change-unit?isFinal=true",
    data:
      '{\r\n    "dsdId": "{{CuDsdId1}}",\r\n    "id": {{CuId1}},\r\n    "name": "{{CuName1}}",\r\n    "agents": [\r\n        {\r\n            "agentType": "human"\r\n        }\r\n    ],\r\n    "cuType": "BASIC",\r\n    "layers": [\r\n        {\r\n            "label": "physical",\r\n            "participatingItems": [\r\n                {\r\n                    "item": {\r\n                        "DATA": {\r\n                            "dsdId": "{{EntityDsdId1}}",\r\n                            "id": {{EntityId1}},\r\n                            "name": "{{EntityName1}}",\r\n                            "isReserved": false,\r\n                            "nslAttributes": [\r\n                                {\r\n                                    "dsdId": "{{AttributeDsdId11}}",\r\n                                    "id": {{AttributeId11}},\r\n                                    "attributeType": {\r\n                                        "type": "string",\r\n                                        "properties": {},\r\n                                        "uiElement": {\r\n                                            "name": "Text",\r\n                                            "dataType": "string",\r\n                                            "uiElement": "text",\r\n                                            "isMulti": false\r\n                                        },\r\n                                        "extendedProperties": {\r\n                                            "sourceValues": []\r\n                                        }\r\n                                    },\r\n                                    "constraints": [],\r\n                                    "isReserved": false,\r\n                                    "isInPotentiality": false,\r\n                                    "triggerConditionalPotentiality": false,\r\n                                    "ownerId": {{UserCCOId}},\r\n                                    "name": "{{AttributeName11}}",\r\n                                    "displayName": "{{AttributeName11}}",\r\n                                    "description": "{{AttributeName11}}",\r\n                                    "dsdStatus": "DRAFT",\r\n                                    "source": "CANVAS",\r\n                                    "status": "DRAFT",\r\n                                    "isNameUpdated": false,\r\n                                    "ontology": [\r\n                                        {\r\n                                            "id": "common",\r\n                                            "name": "common",\r\n                                            "displayName": "Common",\r\n                                            "level": 1\r\n                                        }\r\n                                    ],\r\n                                    "attachments": [],\r\n                                    "keywords": [],\r\n                                    "publisher": {\r\n                                        "id": "{{TenantName}}",\r\n                                        "name": "{{TenantName}}"\r\n                                    },\r\n                                    "author": {\r\n                                        "name": "{{UserCCO}}"\r\n                                    }\r\n                                },\r\n                                {\r\n                                    "dsdId": "{{AttributeDsdId12}}",\r\n                                    "id": {{AttributeId12}},\r\n                                    "attributeType": {\r\n                                        "type": "number",\r\n                                        "properties": {},\r\n                                        "uiElement": {\r\n                                            "name": "Number",\r\n                                            "dataType": "number",\r\n                                            "uiElement": "number",\r\n                                            "isMulti": false\r\n                                        },\r\n                                        "extendedProperties": {\r\n                                            "sourceValues": []\r\n                                        }\r\n                                    },\r\n                                    "constraints": [],\r\n                                    "isReserved": false,\r\n                                    "isInPotentiality": false,\r\n                                    "triggerConditionalPotentiality": false,\r\n                                    "ownerId": {{UserCCOId}},\r\n                                    "name": "{{AttributeName12}}",\r\n                                    "displayName": "{{AttributeName12}}",\r\n                                    "description": "{{AttributeName12}}",\r\n                                    "dsdStatus": "DRAFT",\r\n                                    "source": "CANVAS",\r\n                                    "status": "DRAFT",\r\n                                    "isNameUpdated": false,\r\n                                    "ontology": [\r\n                                        {\r\n                                            "id": "common",\r\n                                            "name": "common",\r\n                                            "displayName": "Common",\r\n                                            "level": 1\r\n                                        }\r\n                                    ],\r\n                                    "attachments": [],\r\n                                    "keywords": [],\r\n                                    "publisher": {\r\n                                        "id": "{{TenantName}}",\r\n                                        "name": "{{TenantName}}"\r\n                                    },\r\n                                    "author": {\r\n                                        "name": "{{UserCCO}}"\r\n                                    }\r\n                                }\r\n                            ],\r\n                            "attachments": [],\r\n                            "displayName": "{{EntityName1}}",\r\n                            "keywords": [],\r\n                            "masterId": {{EntityId1}},\r\n                            "ontology": [\r\n                                {\r\n                                    "id": "common",\r\n                                    "name": "common",\r\n                                    "displayName": "Common",\r\n                                    "level": 1\r\n                                }\r\n                            ],\r\n                            "publisher": {\r\n                                "id": "{{TenantName}}",\r\n                                "name": "{{TenantName}}"\r\n                            },\r\n                            "status": "DRAFT",\r\n                            "dsdStatus": "DRAFT",\r\n                            "version": "1.0",\r\n                            "ownerId": {{UserCCOId}},\r\n                            "author": {\r\n                                "name": "{{UserCCO}}"\r\n                            },\r\n                            "description": "{{EntityName1}}",\r\n                            "isNameUpdated": false\r\n                        },\r\n                        "TYPE": "GeneralEntity"\r\n                    }\r\n                }\r\n            ],\r\n            "type": "physical"\r\n        }\r\n    ],\r\n    "gsiList": [],\r\n    "membershipList": [],\r\n    "isReserved": false,\r\n    "status": "DRAFT",\r\n    "dsdStatus": "DRAFT",\r\n    "designTimeRights": [\r\n        {\r\n            "name": "{{RoleCCO}}",\r\n            "rightHolderId": {{CCORoleId}},\r\n            "rightHolderType": "ROLE",\r\n            "rightHolderName": "{{RoleCCO}}",\r\n            "decisionRight": true,\r\n            "informationRight": true,\r\n            "executionRight": false\r\n        }\r\n    ],\r\n    "txnTimeRights": [\r\n        {\r\n            "name": "{{RoleCCO}}",\r\n            "rightHolderId": {{CCORoleId}},\r\n            "rightHolderType": "ROLE",\r\n            "rightHolderName": "{{RoleCCO}}",\r\n            "decisionRight": false,\r\n            "informationRight": true,\r\n            "executionRight": true\r\n        }\r\n    ],\r\n    "displayName": "{{CuName1}}",\r\n    "description": "",\r\n    "ontology": [],\r\n    "keywords": [],\r\n    "attachments": [],\r\n    "nextTriggerSet": [],\r\n    "masterId": {{CuId1}},\r\n    "cuSystemProperties": {},\r\n    "author": {\r\n        "name": "{{UserCCO}}"\r\n    },\r\n    "ownerId": {{UserCCOId}},\r\n    "version": "1.0",\r\n    "reservedCUType": "",\r\n    "isNameUpdated": false,\r\n    "uiProperties": {}\r\n}',
    headers: {
      Accept: "application/json, text/plain, */*",
      Authorization: "{{BearerToken}}",
      traceparent: "00-6635ffe94abbd976c5abdae91ec950b5-4519b868e16b030f-01",
      "User-Agent":
        "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.198 Safari/537.36",
      "Content-Type": "application/json",
      "Accept-Language": "en"
    },
    post(response) {
      pm.test("Check status code", function() {
        pm.expect(pm.response.code).to.eq(200);
        pm.expect(pm.response.json().message).to.eq(
          pm.variables.get("CuName1") + " is saved"
        );
        pm.expect(pm.response.json().result.status).to.eq("DRAFT");
      });

      pm.variables.set("CuId1", pm.response.json().result.id);
      pm.variables.set("LayerId1", pm.response.json().result.layers[0].id);
      pm.variables.set(
        "ParticipatingItemId1",
        pm.response.json().result.layers[0].participatingItems[0].id
      );
    }
  });

  postman[Request]({
    name: "Add CUs to GSI-(BasicSolution)",
    id: "b24c975f-b5cb-4900-8216-986d9756cbad",
    method: "POST",
    address:
      "https://{{TenantName}}.{{BaseURL}}/dsd-orch/dsd-bets-store/tenant/gsi",
    data:
      '{\r\n    "dsdId": "{{SolutionDsdId}}",\r\n    "id": {{SolutionId}},\r\n    "agents": [\r\n        {\r\n            "agentType": "human"\r\n        }\r\n    ],\r\n    "attributeDesignRights": {},\r\n    "attributeTransactionRights": {},\r\n    "cuType": "BASIC",\r\n    "dcd": [],\r\n    "description": "{{SolutionName}}",\r\n    "designTimeRights": [\r\n        {\r\n            "name": "{{RoleCCO}}",\r\n            "rightHolderId": {{CCORoleId}},\r\n            "rightHolderType": "ROLE",\r\n            "rightHolderName": "{{RoleCCO}}",\r\n            "decisionRight": true,\r\n            "informationRight": true,\r\n            "executionRight": false\r\n        }\r\n    ],\r\n    "displayName": "{{SolutionName}}",\r\n    "entityDesignRights": {},\r\n    "entityTransactionRights": {},\r\n    "exceptionCUList": [],\r\n    "gsiList": [],\r\n    "layers": [],\r\n    "mindCUList": [],\r\n    "name": "{{SolutionName}}",\r\n    "nextTriggerSet": [],\r\n    "ontology": [\r\n        {\r\n            "id": "common",\r\n            "name": "common",\r\n            "displayName": "Common",\r\n            "level": 1\r\n        }\r\n    ],\r\n    "ownerId": {{UserCCOId}},\r\n    "solutionLogic": [\r\n        {\r\n            "dsdId": null,\r\n            "id": null,\r\n            "name": "{{CuName1}}",\r\n            "agents": [\r\n                {\r\n                    "agentType": "human"\r\n                }\r\n            ],\r\n            "displayName": "{{CuName1}}",\r\n            "description": "{{CuName1}}",\r\n            "ontology": [\r\n                {\r\n                    "id": "common",\r\n                    "name": "common",\r\n                    "displayName": "Common",\r\n                    "level": 1\r\n                }\r\n            ],\r\n            "index": 1,\r\n            "referencedChangeUnit": {{CuId1}},\r\n            "nextTriggerSet": [],\r\n            "reservedCUType": "",\r\n            "membershipList": [],\r\n            "isReserved": false,\r\n            "status": "DRAFT",\r\n            "designTimeRights": [\r\n                {\r\n                    "name": "{{RoleCCO}}",\r\n                    "rightHolderId": {{CCORoleId}},\r\n                    "rightHolderType": "ROLE",\r\n                    "rightHolderName": "{{RoleCCO}}",\r\n                    "decisionRight": true,\r\n                    "informationRight": true,\r\n                    "executionRight": false\r\n                }\r\n            ],\r\n            "txnTimeRights": [\r\n                {\r\n                    "name": "{{RoleCCO}}",\r\n                    "rightHolderId": {{CCORoleId}},\r\n                    "rightHolderType": "ROLE",\r\n                    "rightHolderName": "{{RoleCCO}}",\r\n                    "decisionRight": false,\r\n                    "informationRight": true,\r\n                    "executionRight": true\r\n                }\r\n            ],\r\n            "keywords": [],\r\n            "attachments": [],\r\n            "dcd": [],\r\n            "cuSystemProperties": {},\r\n            "specialFeatureProperties": {},\r\n            "ownerId": {{UserCCOId}},\r\n            "uiProperties": {},\r\n            "cuType": "BASIC",\r\n            "dsdReferencedChangeUnit": "{{CuDsdId1}}"\r\n        }\r\n    ],\r\n    "status": "DRAFT",\r\n    "dsdStatus": "DRAFT",\r\n    "txnTimeRights": [\r\n        {\r\n            "name": "{{RoleCCO}}",\r\n            "rightHolderId": {{CCORoleId}},\r\n            "rightHolderType": "ROLE",\r\n            "rightHolderName": "{{RoleCCO}}",\r\n            "decisionRight": false,\r\n            "informationRight": true,\r\n            "executionRight": true\r\n        }\r\n    ],\r\n    "masterId": {{SolutionId}},\r\n    "author": {\r\n        "name": "{{UserCCO}}"\r\n    },\r\n    "keywords": [\r\n        ""\r\n    ],\r\n    "version": "1.0",\r\n    "isNameUpdated": false\r\n}',
    headers: {
      Accept: "application/json, text/plain, */*",
      Authorization: "{{BearerToken}}",
      traceparent: "00-6635ffe94abbd976c5abdae91ec950b5-4519b868e16b030f-01",
      "User-Agent":
        "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.198 Safari/537.36",
      "Content-Type": "application/json",
      "Accept-Language": "en"
    },
    post(response) {
      pm.test("Check status code", function() {
        pm.expect(pm.response.code).to.eq(200);
        pm.expect(pm.response.json().message).to.eq(
          pm.variables.get("SolutionName") + " is saved"
        );
        pm.expect(pm.response.json().result.status).to.eq("DRAFT");
        pm.expect(pm.response.json().result.version).to.eq("1.0");
      });
      pm.variables.set(
        "TriggerCuDsdId1",
        pm.response.json().result.solutionLogic[0].dsdId
      );
      pm.variables.set(
        "SolutionJson",
        JSON.stringify(pm.response.json().result)
      );
    }
  });

  postman[Request]({
    name: "Finish GSI-(BasicSolution)",
    id: "324574c1-1e57-4c94-9593-0b0c8ed8bcfa",
    method: "POST",
    address:
      "https://{{TenantName}}.{{BaseURL}}/dsd-orch/dsd-bets-store/tenant/finish/gsi",
    data: "{{SolutionJson}}",
    headers: {
      Accept: "application/json, text/plain, */*",
      Authorization: "{{BearerToken}}",
      traceparent: "00-6635ffe94abbd976c5abdae91ec950b5-4519b868e16b030f-01",
      "User-Agent":
        "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.198 Safari/537.36",
      "Content-Type": "application/json",
      "Accept-Language": "en"
    },
    post(response) {
      pm.test("Check status code", function() {
        pm.expect(pm.response.code).to.eq(200);
        pm.expect(pm.response.json().message).to.eq(
          pm.variables.get("SolutionName") + " is saved"
        );

        pm.expect(pm.response.json().result.status).to.eq("READY");
        pm.expect(pm.response.json().result.version).to.eq("1.0");
      });
    }
  });

  postman[Request]({
    name: "Send Notification to Reviewer",
    id: "671b249c-6502-4901-a7f0-af73b8ea6ca6",
    method: "POST",
    address:
      "https://{{TenantName}}.{{BaseURL}}/dsd-orch/v1/notifications/api/notification/send",
    data:
      '{\n  "actionableContent": {\n    "target_type": "Gsi",\n    "target_id": {{SolutionId}},\n    "target_name": "{{SolutionName}}",\n    "context_cu": "",\n    "context_gsi": "",\n    "approvals": "true"\n  },\n  "title": "Review gsi",\n  "targetUserId": [\n    "{{UserCCO1}}@nslhub.com"\n  ],\n  "notificationChannels": [\n    "PUSH"\n  ],\n  "content": ""\n}',
    headers: {
      "accept-language": "en",
      authorization: "{{BearerToken}}",
      "content-type": "application/json",
      accept: "application/json, text/plain, */*"
    },
    post(response) {
      pm.test("Check status code", function() {
        pm.expect(pm.response.code).to.eq(200);
        pm.expect(pm.response.json().message).to.eq(
          "Notification sent successfully"
        );
      });
    }
  });

  postman[Request]({
    name: "Login as usercco1",
    id: "96bb2faf-5017-4b91-aab3-e38c8ac6cf18",
    method: "POST",
    address:
      "{{IamURL}}/auth/realms/{{TenantName}}/protocol/openid-connect/token",
    data: {
      client_id: "{{TenantName}}",
      grant_type: "password",
      password: "{{Password}}",
      username: "{{UserCCO1}}"
    },
    headers: {
      Accept: "application/json, text/plain, */*",
      "User-Agent":
        "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.198 Safari/537.36",
      "Content-Type": "application/x-www-form-urlencoded",
      "Accept-Language": "en"
    },
    post(response) {
      pm.test("Check status code", function() {
        pm.expect(pm.response.code).to.eq(200);
      });

      pm.environment.set(
        "BearerToken",
        pm.response.json().token_type + " " + pm.response.json().access_token
      );
      pm.environment.set("RefreshToken", pm.response.json().refresh_token);
    }
  });

  postman[Request]({
    name: "Approve the GSI-(BasicSolution)",
    id: "8c817350-c3d2-4798-bb3c-9c14e943ff2b",
    method: "POST",
    address:
      "https://{{TenantName}}.{{BaseURL}}/dsd-orch/dsd-bets-store/tenant/approve/gsi/{{SolutionId}}",
    data:
      '{\r\n    "id": {{SolutionId}},\r\n    "dsdId": "{{SolutionDsdId}}",\r\n    "name": "{{SolutionName}}"\r\n}',
    headers: {
      "accept-language": "en",
      authorization: "{{BearerToken}}",
      "content-type": "application/json",
      accept: "application/json, text/plain, */*"
    },
    post(response) {
      pm.test("Check status code", function() {
        pm.expect(pm.response.code).to.eq(200);
      });
    }
  });

  postman[Request]({
    name: "Get Solution Details - SOLUTION_INFO_RIGHTS",
    id: "25edc32d-ea3c-4257-99c1-e0fdd3bfdd9a",
    method: "GET",
    address:
      "https://{{TenantName}}.{{BaseURL}}/dsd-orch/dsd-bets-store/tenant/gsi/matching?isPublished=&limit=36&ontology=&page=1&publisherIdOrName=&query={{SolutionName}}&userRights=SOLUTIONS_INFO_RIGHTS",
    headers: {
      Accept: "application/json, text/plain, */*",
      Authorization: "{{BearerToken}}",
      "Content-Type": "application/json",
      "Accept-Language": "en"
    },
    post(response) {
      pm.test("Check status code", function() {
        pm.expect(pm.response.code).to.eq(200);
        pm.expect(pm.response.json().message).to.eq(
          "fetching GSI details with search criteria is successful"
        );
      });
      pm.variables.set(
        "ApprovedSolutionJson",
        JSON.stringify(pm.response.json().result)
      );

      // var expectedStatus = "APPROVED";
      // var maxNumberOfTries = 20;
      // var sleepBetweenTries = 2000;

      // if (!pm.environment.get("collection_tries")) {
      //     pm.environment.set("collection_tries", 1);
      // }
      // var status  = pm.response.json().result.data[0].status;

      // if ((status != expectedStatus) && (pm.environment.get("collection_tries") < maxNumberOfTries)) {
      //      var tries = parseInt(pm.environment.get("collection_tries"), 10);

      //       pm.environment.set("collection_tries", tries + 1);
      //      setTimeout(function() {}, sleepBetweenTries);
      //      postman.setNextRequest(request.id);
      //  } else {
      //      pm.environment.unset("collection_tries");

      //      pm.test("Status is " + expectedStatus, function () {
      //           pm.expect( pm.response.json().result.data[0].status).to.eq(expectedStatus);
      //           pm.expect( pm.response.json().result.data[0].version ).to.eq("1.0");
      //      });

      // }
    }
  });

  postman[Request]({
    name: "Get Solution Details-(BasicSolution) After Approval Copy",
    id: "993f3a80-dafe-4100-87b0-1338bde4006b",
    method: "GET",
    address:
      "https://{{TenantName}}.{{BaseURL}}/dsd-orch/dsd-bets-store/tenant/gsi/{{SolutionDsdId}}",
    headers: {
      Accept: "application/json, text/plain, */*",
      Authorization: "{{BearerToken}}",
      traceparent: "00-6635ffe94abbd976c5abdae91ec950b5-4519b868e16b030f-01",
      "User-Agent":
        "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.198 Safari/537.36",
      "Content-Type": "application/json",
      "Accept-Language": "en"
    },
    post(response) {
      pm.test("Check status code", function() {
        pm.expect(pm.response.code).to.eq(200);
        pm.expect(pm.response.json().message).to.eq(
          "fetching GSI is successful"
        );
      });

      pm.variables.set(
        "ApprovedSolutionJson",
        JSON.stringify(pm.response.json().result)
      );

      // var expectedStatus = "APPROVED";
      // var maxNumberOfTries = 20;
      // var sleepBetweenTries = 2000;

      // if (!pm.environment.get("collection_tries")) {
      //     pm.environment.set("collection_tries", 1);
      // }
      // var status  = pm.response.json().result.status;

      // if ((status != expectedStatus) && (pm.environment.get("collection_tries") < maxNumberOfTries)) {
      //     setTimeout(function() {}, sleepBetweenTries);
      //      var tries = parseInt(pm.environment.get("collection_tries"), 10);

      //       pm.environment.set("collection_tries", tries + 1);

      //      postman.setNextRequest(request.id);
      //  } else {
      //      pm.environment.unset("collection_tries");

      //      pm.test("Status is " + expectedStatus, function () {
      //           pm.expect(pm.response.json().result.status).to.eq(expectedStatus);
      //           pm.expect(pm.response.json().result.version).to.eq("1.0");
      //      });
      // }
    }
  });

  postman[Request]({
    name: "Publish the GSI-(BasicSolution)",
    id: "ffd45c83-75c2-4f25-b1e8-441cc3aa6dd2",
    method: "POST",
    address:
      "https://{{TenantName}}.{{BaseURL}}/dsd-orch/dsd-bets-store/tenant/publish/gsi",
    data: "{{ApprovedSolutionJson}}",
    headers: {
      "accept-language": "en",
      authorization: "{{BearerToken}}",
      "content-type": "application/json",
      accept: "application/json, text/plain, */*"
    },
    post(response) {
      pm.test("Verify basic solution is published successfully", function() {
        pm.expect(pm.response.code).to.eq(200);
        pm.expect(pm.response.json().message).to.eq(
          "GSI " +
            pm.variables.get("SolutionName") +
            " GSI Unit Id :" +
            pm.variables.get("SolutionId") +
            " is successfully published"
        );
        pm.expect(pm.response.json().result.status).to.eq("PUBLISHED");
        pm.expect(pm.response.json().result.version).to.eq("1.0");
        pm.expect(pm.response.json().result.masterId).to.eq(
          pm.variables.get("SolutionId")
        );
      });

      // setTimeout(() => {}, pm.environment.get('WaitTime'));
    }
  });
}
