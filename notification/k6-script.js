// Auto-generated by the postman-to-k6 converter

import "./libs/shim/core.js";
import "./libs/shim/expect.js";
import "./libs/shim/urijs.js";

export let options = { maxRedirects: 4 };

const Request = Symbol.for("request");
postman[Symbol.for("initial")]({
  options,
  environment: {
    BaseURL: "qa3.nslhub.com",
    IamURL: "https://qaiam.nslhub.com",
    SuperAdminTenant: "Super-Admin",
    TenantName: "apiqa0504",
    TenantAdmin: "admin@nslhub.com",
    AdminPassword: "admin",
    CCORoleId: 1841833683818,
    RoleCCO: "CCO",
    UserCCOManager: "userccomanager",
    UserCCO: "usercco",
    UserCCOId: 322589991331,
    UserCCO1: "usercco1",
    UserCCO1Id: 1972120016659,
    CCHRoleId: 234529237640,
    RoleCCH: "CCH",
    UserCCH: "usercch",
    RoleCCA: "CCA",
    UserCCA: "usercca",
    Password: "test",
    BearerToken: "undefined undefined",
    TenantName2: "apiqaei0504",
    TenantAdmin2: "admin@nslhub.com",
    AdminPassword2: "admin",
    DsdFileStoreURL: "https://ava-nlg-dev.nslhub.com",
    RefreshToken: null,
    WaitTime: 30000,
    NUMBER: "",
    COUNT: "",
    UserCCOEmailId: "usercco@nslhub.com",
    UserCCO1EmailId: "usercco1@nslhub.com",
    UserCCOManagerEmailId: "userccomanager@nslhub.com",
    UserCCAId: 2044956951239,
    UserCCA1Id: 2043386291967,
    UserCCA1: "usercca1",
    CCARoleId: 368848764661,
    UserCCOManagerId: 2119243203126,
    UserCCH1: "usercch1",
    OuCCO: "oucco",
    OuCCOId: "191876919025",
    UserOuCCO: "useroucco",
    UserOuCCO1: "useroucco1",
    UserOuCCOId: 1657502426387,
    UserOuCCOId1: 668079088379,
    GN: "",
    SolutionPublisher: "SolutionPublisher",
    SolutionPublisherId: 824925532392,
    TenantNameStage: "apiqa0504stage",
    TenantNameProd: "apiqa0504prod",
    TenantNameStageClientId: "apiqa0504_staging",
    UserCCHId: 398151345508,
    TraceAuditRole: "auditdata",
    TraceAuditRoleId: 1873250222640,
    AuditDesigner: "auditdesigner",
    AuditDesignerId: 1139785560613,
    AuditReviewer: "auditreviewer",
    AuditReviewerId: 996441711937,
    AuditDesignerEmailId: "auditdesigner@nslhub.com",
    SuperAdminUserName: "platformadmin@nslhub.com",
    SuperAdminPassword: "padmin@123",
    SaasTenantName: "apiqasaas0802",
    SaasUserCCO: "usercco",
    SaasUserCCOId: "1173118793932",
    SaasTenantId: 28606,
    SuperAdminUserId: "-827185515",
    SuperAdminUser: "platformadmin",
    SaasRoleCCO: "CCO",
    SaasTenantAdmin: "admin@nslhub.com",
    SaasUserCCH: "usercch",
    SaasUserCCHId: "933373429905",
    SaasRoleCCH: "CCH",
    SaasUserCCA: "usercca",
    SaasUserCCAId: "1588750292491",
    SaasRoleCCA: "CCA",
    RoleManager: "Manager",
    ManagerRoleId: 829265664407,
    RoleEmployee: "Employee",
    EmployeeRoleId: 2040409113899,
    RoleFinance: "Finance",
    FinanceRoleId: 1764637492961,
    TenantAdminId: 894878720178,
    Tenant2AdminId: 1597011094011,
    T2UserCCOId: 1386113498793,
    T2CCORoleId: 239407227356,
    EmployeeUser: "employeeuser",
    EmployeeUserId: 1917645633263,
    FinanceUser: "financeuser",
    FinanceUserId: 820077520635,
    FinanceUser1: "financeuser1",
    FinanceUserId1: "1192769182955",
    EmployeeUser1: "employeeuser1",
    EmployeeUserId1: "1228497924811",
    ManagerUser: "manageruser",
    ManagerUserId: 1732001198107,
    ManagerUser1: "manageruser1",
    ManagerUserId1: "897141596215",
    UserCCHEmailId: "usercch@nslhub.com",
    UserCCAEmailId: "usercca@nslhub.com",
    UserCCA1EmailId: "usercca1@nslhub.com",
    UserCCH1EmailId: "usercch1@nslhub.com",
    UserCCH1Id: 632745185759,
    SAASAdminUserId: "242233047416",
    SaasUserCCO1Id: "464692553728",
    SaasUserCCOManagerId: "202094916017",
    ManagerUser1Id: 1989195344420,
    FinanceUser1Id: 1829479253660,
    EmployeeUser1Id: 1178159858335,
    T2UserCCO1Id: 878542497800,
    StageAdmin: "stageadmin@nslhub.com",
    UserCCC: "userccc",
    UserCCC1: "userccc1",
    UserCCCManager: "usercccmanager",
    RoleSolutionCustomizer: "SolutionCustomizer",
    UserCCCId: "668849564311",
    UserCCC1Id: "1607519294012",
    SolutionCustomizerRoleId: "639989182448",
    T3UserCCO1Id: 405650278408,
    Tenant3AdminId: 982435399574,
    T3UserCCOId: 1424682699760,
    T3CCORoleId: 129071126100,
    TenantName3: "apiqa3ten0604",

  }
});

export default function() {
  postman[Request]({
    name: "Generate Token (usercco) and Test Data",
    id: "79ed87c4-dbe0-4965-80b8-cccbb87c8829",
    method: "POST",
    address:
      "{{IamURL}}/auth/realms/{{TenantName}}/protocol/openid-connect/token",
    data: {
      client_id: "{{TenantName}}",
      grant_type: "password",
      password: "{{Password}}",
      username: "{{UserCCO}}"
    },
    headers: {
      Accept: "application/json, text/plain, */*",
      "Content-Type": "application/x-www-form-urlencoded",
      "Accept-Language": "en"
    },
    pre() {
      // pm.variables.clear();

      pm.variables.set(
        "RandomNumber",
        new Date()
          .toISOString()
          .replace(/[^0-9]/g, "")
          .slice(0, -3) +
          "" +
          Math.floor(Math.random() * 100000 + 1)
      );

      // Solution Development

      pm.environment.set(
        "SolutionName",
        "BasicSolution" + pm.variables.get("RandomNumber")
      );
      pm.environment.set("CCORoleId", pm.variables.get("CCORoleId"));
      pm.environment.set("RoleCCO", pm.variables.get("RoleCCO"));

      pm.environment.set(
        "CuName1",
        "Student Details " + pm.variables.get("RandomNumber")
      );
      pm.environment.set(
        "EntityName1",
        "student" + pm.variables.get("RandomNumber")
      );
      pm.environment.set("AttributeName11", "Full Name");
      pm.environment.set("AttributeName12", "Age");

      pm.environment.set(
        "CuName2",
        "Address " + pm.variables.get("RandomNumber")
      );
      pm.environment.set(
        "EntityName2",
        "contact" + pm.variables.get("RandomNumber")
      );
      pm.environment.set("AttributeName21", "Address");
      pm.environment.set("AttributeName22", "Pin Code");

      // Solution Execution

      pm.environment.set(
        "AttributeValue11",
        "John " + pm.variables.get("RandomNumber")
      );
      pm.environment.set("AttributeValue12", pm.variables.get("RandomNumber"));

      pm.environment.set(
        "AttributeValue21",
        "California " + pm.variables.get("RandomNumber")
      );
      pm.environment.set("AttributeValue22", pm.variables.get("RandomNumber"));
    },
    post(response) {
      pm.test("Check status code", function() {
        pm.expect(pm.response.code).to.eq(200);
      });

      pm.environment.set(
        "BearerToken",
        pm.response.json().token_type + " " + pm.response.json().access_token
      );
      pm.environment.set("RefreshToken", pm.response.json().refresh_token);

      pm.environment.set(
        "RandomNumber",
        new Date()
          .toISOString()
          .replace(/[^0-9]/g, "")
          .slice(0, -3) +
          "" +
          Math.floor(Math.random() * 100000 + 1)
      );
      pm.environment.set(
        "EntityName1",
        "student" + pm.variables.get("RandomNumber")
      );
      pm.environment.set("AttributeName11", "Full Name");
      pm.environment.set("AttributeName12", "Age");
    }
  });

  postman[Request]({
    name: "Create first Entity",
    id: "bcc4f3c5-3312-450b-bdea-531ba24dbafd",
    method: "POST",
    address: "https://{{TenantName}}.{{BaseURL}}/dsd-orch/core/Entity",
    data: '{"nslAttributes": [{"name": "{{AttributeName11}}","isReserved": false,"constraints": [],"attributeClassification": "ESSENTIAL","attributeType": {"type": "string","properties": {"sourceValues": "[]"},"uiElement": "text"},"id": null},{"defaultValue": null,"name": "{{AttributeName12}}","isReserved": false,"constraints": [],"attributeClassification": "ESSENTIAL","attributeType": {"type": "number","properties": {"sourceValues": "[]"},"uiElement": "number"},"id": null}],"entityClassification": "","name": "{{EntityName1}}","isMultiValue": false}',
    headers: {
      "accept-language": "en",
      Authorization: "{{BearerToken}}",
      "content-type": "application/json",
      accept: "application/json, text/plain, */*"
    },
    post(response) {
      pm.test("Check status code", function () {
        // console.log(pm.response.json())
        pm.expect(pm.response.code).to.eq(200);
        pm.expect(pm.response.json().message).to.eq(
          pm.environment.get("EntityName1") + " is successfully saved"
        );
      });

      pm.environment.set("EntityId1", pm.response.json().result.id);
      pm.environment.set(
        "AttributeId11",
        pm.response.json().result.nslAttributes[0].id
      );
      pm.environment.set(
        "AttributeId12",
        pm.response.json().result.nslAttributes[1].id
      );
    }
  });

  postman[Request]({
    name: "Add Attributes to First Entity",
    id: "1bb7c392-3eba-457d-b258-658dece73f10",
    method: "POST",
    address: "https://{{TenantName}}.{{BaseURL}}/core/UIAttribute",
    data:
      '{\r\n\t"cuId": null,\r\n\t"cuType": null,\r\n\t"tuples": [],\r\n\t"entityList": [\r\n\t\t{\r\n\t\t\t"entityId": {{EntityId1}},\r\n\t\t\t"tuples": [],\r\n\t\t\t"attributeList": [\r\n\t\t\t\t{\r\n\t\t\t\t\t"attributeId": {{AttributeId11}},\r\n\t\t\t\t\t"tuples": [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t"key": "uiControl",\r\n\t\t\t\t\t\t\t"value": "text"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t"attributeId": {{AttributeId12}},\r\n\t\t\t\t\t"tuples": [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t"key": "uiControl",\r\n\t\t\t\t\t\t\t"value": "number"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t]\r\n}',
    headers: {
      Accept: "application/json, text/plain, */*",
      Authorization: "{{BearerToken}}",
      "Content-Type": "application/json",
      "Accept-Language": "en"
    },
    post(response) {
      pm.test("Check status code", function() {
        pm.expect(pm.response.code).to.eq(200);
        pm.expect(pm.response.json().message).to.eq(
          "Successfully saved the UIAttribute "
        );
      });
    }
  });

  postman[Request]({
    name: "Create first CU",
    id: "942ba75c-3098-4233-9819-a25a757d1307",
    method: "POST",
    address: "https://{{TenantName}}.{{BaseURL}}/dsd-orch/core/CU",
    data:
      '{ "name": "{{CuName1}}", "agents": [ { "agentType": "human" } ], "cuType": "BASIC", "layers": [ { "type": "physical", "label": "physical", "participatingItems": [ { "item": { "TYPE": "GeneralEntity", "DATA": { "name": "{{EntityName1}}", "nslAttributes": [ { "name": "{{AttributeName11}}", "attributeType": { "type": "string", "nestedNslDataTypeProperties": {}, "properties": { "sourceValues": "[]" } }, "constraints": [], "attributeClassification": "ESSENTIAL", "isReserved": false, "id": "{{AttributeId11}}", "uiElement": { "dataType": "string", "name": "Text", "uiElement": "text", "isMulti": false } }, { "name": "{{AttributeName12}}", "attributeType": { "type": "number", "nestedNslDataTypeProperties": {}, "properties": { "sourceValues": "[]" } }, "constraints": [], "attributeClassification": "ESSENTIAL", "isReserved": false, "id": "{{AttributeId12}}", "uiElement": { "dataType": "number", "name": "Number", "uiElement": "number", "isMulti": false } } ], "isReserved": false, "id": "{{EntityId1}}" } } } ] } ], "designTimeRights": [ { "rightHolderId": "{{CCORoleId}}", "name": "{{RoleCCO}}", "rightHolderType": "ROLE", "informationRight": true, "decisionRight": true } ], "txnTimeRights": [ { "rightHolderId": "{{CCORoleId}}", "name": "{{RoleCCO}}", "rightHolderType": "ROLE", "informationRight": true, "decisionRight": false, "executionRight": true } ], "id": null, "draftedCu": false, "nextTriggerSet": [], "dcd": [], "mindCUList": [], "exceptionCUList": [], "isAlternate": false, "index": 1, "activeCuIndex": true, "entitySaved": true, "createdEntityId": "{{EntityId1}}", "displayName": "{{CuName1}}", "description": "Change Unit Description" }',
    headers: {
      Accept: "application/json, text/plain, */*",
      Authorization: "{{BearerToken}}",
      "Content-Type": "application/json",
      "Accept-Language": "en"
    },
    post(response) {
      pm.test("Check status code", function () {
        // console.log(pm.response.json())
        // console.log(pm.environment.get("CuName1"))
        // console.log(pm.environment.get("AttributeName11"))
        // console.log(pm.environment.get("AttributeId11"))
        // console.log(pm.environment.get("AttributeName12"))
        // console.log(pm.environment.get("AttributeId12"))
        // console.log(pm.environment.get("CCORoleId"))
        // console.log(pm.environment.get("RoleCCO"))
        // console.log(pm.environment.get("EntityId1"))
        pm.expect(pm.response.code).to.eq(200);
        pm.expect(pm.response.json().message).to.eq(
          "CU has been saved successfully"
        );
        pm.expect(pm.response.json().result.status).to.eq("DRAFT");
      });
      pm.environment.set("CuId1", pm.response.json().result.id);
      pm.environment.set(
        "ItemId1",
        pm.response.json().result.layers[0].participatingItems[0].id
      );
      pm.environment.set(
        "ParticipatingItemId1",
        pm.response.json().result.layers[0].id
      );
    }
  });

  postman[Request]({
    name: "Create GSI-Draft",
    id: "2577cbc2-cbac-4e22-8918-40317f310563",
    method: "POST",
    address: "https://{{TenantName}}.{{BaseURL}}/core/GSI-Draft",
    data:
      '{\n    "name": "{{SolutionName}}",\n    "displayName": "{{SolutionName}}",\n    "cuType": "GSI",\n    "agents": [\n        {\n            "agentType": "human"\n        }\n    ],\n    "subOrdinateCUList": [],\n    "superOrdinateCUList": [],\n    "layers": null,\n    "solutionLogic": [\n        {\n    "referencedChangeUnit": {{CuId1}},\n\t\t\t"id": null,\n\t\t\t"draftedCu": false,\n\t\t\t"name": "{{CuName1}}",\n\t\t\t"nextTriggerSet": [],\n\t\t\t"dcd": [],\n\t\t\t"mindCUList": [],\n\t\t\t"exceptionCUList": [],\n\t\t\t"cuType": "BASIC",\n\t\t\t"index": 1,\n            "designTimeRights": [\n                {\n                    "informationRight": true,\n                    "decisionRight": true,\n                    "executionRight": false,\n                    "rightHolderId": {{CCORoleId}},\n                    "rightHolderType": "ROLE",\n                    "rightHolderName": "{{RoleCCO}}",\n                    "disableParentRoleAccess": false\n                }\n            ],\n            "txnTimeRights": [\n                {\n                    "informationRight": true,\n                    "decisionRight": false,\n                    "executionRight": true,\n                    "rightHolderId": {{CCORoleId}},\n                    "rightHolderType": "ROLE",\n                    "rightHolderName": "{{RoleCCO}}",\n                    "disableParentRoleAccess": false\n                }\n            ],\n            "visited": true\n        }\n    ],\n    "designTimeRights": [\n        {\n            "rightHolderId": {{CCORoleId}},\n            "rightHolderName": "{{RoleCCO}}",\n            "name": "{{RoleCCO}}",\n            "informationRight": true,\n            "decisionRight": true,\n            "rightHolderType": "ROLE"\n        }\n    ],\n    "txnTimeRights": [\n        {\n            "executionRight": true,\n            "rightHolderId": {{CCORoleId}},\n            "rightHolderName": "{{RoleCCO}}",\n            "name": "{{RoleCCO}}",\n            "informationRight": true,\n            "decisionRight": false,\n            "rightHolderType": "ROLE"\n        }\n    ],\n    "id": null\n}',
    headers: {
      "Accept-Language": "en",
      Authorization: "{{BearerToken}}",
      "Content-Type": "application/json",
      Accept: "application/json, text/plain, */*"
    },
    post(response) {
      pm.test("Check status code", function() {
        pm.expect(pm.response.code).to.eq(200);
        pm.expect(pm.response.json().message).to.eq(
          "GSI has been saved successfully"
        );
        pm.expect(pm.response.json().result.status).to.eq("DRAFT");
      });
      pm.environment.set("SolutionId1", pm.response.json().result.id);
      pm.environment.set(
        "LayerId1",
        pm.response.json().result.solutionLogic[0].id
      );
    }
  });

  postman[Request]({
    name: "Save GSI",
    id: "a9ae8913-da31-4e01-848f-c72705a823fe",
    method: "POST",
    address: "https://{{TenantName}}.{{BaseURL}}/dsd-orch/core/GSI",
    data:
      '{\r\n    "name": "{{SolutionName}}",\r\n    "displayName": "{{SolutionName}}",\r\n    "cuType": "GSI",\r\n    "agents": [\r\n        {\r\n            "agentType": "human"\r\n        }\r\n    ],\r\n    "subOrdinateCUList": [],\r\n    "superOrdinateCUList": [],\r\n    "layers": null,\r\n    "solutionLogic": [\r\n        {\r\n            "index": 1,\r\n            "nextTriggerSet": [],\r\n            "referencedChangeUnit": {{CuId1}},\r\n            "dcd": [],\r\n            "exceptionCUList": [],\r\n            "eventCUList": [],\r\n            "mindCUList": [],\r\n            "entityDesignRights": {},\r\n            "entityTransactionRights": {},\r\n            "attributeDesignRights": {},\r\n            "attributeTransactionRights": {},\r\n            "cuType": "BASIC",\r\n            "specialFeatureProperties": {},\r\n            "slotItemData": {},\r\n            "name": "{{CuName1}}",\r\n            "displayName": "{{CuName1}}",\r\n            "description": "Change Unit Description",\r\n            "agents": [\r\n                {\r\n                    "agentType": "human"\r\n                }\r\n            ],\r\n            "superOrdinateCUList": [],\r\n            "membershipList": [],\r\n            "status": "DRAFT",\r\n            "propertiesMap": {\r\n                "specialFeatures": [],\r\n                "defaultValues": []\r\n            },\r\n            "cuSystemProperties": {},\r\n            "id": {{LayerId1}},\r\n            "designTimeRights": [\r\n                {\r\n                    "informationRight": true,\r\n                    "decisionRight": true,\r\n                    "executionRight": false,\r\n                    "rightHolderId": {{CCORoleId}},\r\n                    "rightHolderType": "ROLE",\r\n                    "rightHolderName": "{{RoleCCO}}",\r\n                    "disableParentRoleAccess": false\r\n                }\r\n            ],\r\n            "txnTimeRights": [\r\n                {\r\n                    "informationRight": true,\r\n                    "decisionRight": false,\r\n                    "executionRight": true,\r\n                    "rightHolderId": {{CCORoleId}},\r\n                    "rightHolderType": "ROLE",\r\n                    "rightHolderName": "{{RoleCCO}}",\r\n                    "disableParentRoleAccess": false\r\n                }\r\n            ],\r\n            "visited": true\r\n        }\r\n    ],\r\n    "designTimeRights": [\r\n        {\r\n            "rightHolderId": {{CCORoleId}},\r\n            "rightHolderName": "{{RoleCCO}}",\r\n            "name": "{{RoleCCO}}",\r\n            "informationRight": true,\r\n            "decisionRight": true,\r\n            "rightHolderType": "ROLE"\r\n        }\r\n    ],\r\n    "txnTimeRights": [\r\n        {\r\n            "executionRight": true,\r\n            "rightHolderId": {{CCORoleId}},\r\n            "rightHolderName": "{{RoleCCO}}",\r\n            "name": "{{RoleCCO}}",\r\n            "informationRight": true,\r\n            "decisionRight": false,\r\n            "rightHolderType": "ROLE"\r\n        }\r\n    ],\r\n    "id": {{SolutionId1}},\r\n    "status": "DRAFT",\r\n    "version": "1.0",\r\n    "masterId": {{SolutionId1}}\r\n}',
    headers: {
      Accept: "application/json, text/plain, */*",
      Authorization: "{{BearerToken}}",
      "Content-Type": "application/json",
      "Accept-Language": "en"
    },
    post(response) {
      pm.test("Check status code", function() {
        pm.expect(pm.response.code).to.eq(200);
        pm.expect(pm.response.json().message).to.eq(
          "GSI has been saved successfully"
        );
        pm.expect(pm.response.json().result.status).to.eq("DRAFT");
      });
    }
  });

  postman[Request]({
    name: "Finish GSI",
    id: "94ceefd6-5698-4000-ba81-dd958b8795a1",
    method: "POST",
    address:
      "https://{{TenantName}}.{{BaseURL}}/solution-versioning/api/version/finish",
    data:
      '{\n  "constrainedToReportingTree": false,\n  "constrainedToTeam": false,\n  "rights": [\n    "TXN_INFO_RIGHTS",\n    "SOLUTIONS_DECISION_RIGHTS",\n    "EXECUTION_RIGHTS"\n  ],\n  "nextTriggerSet": [],\n  "dcd": [],\n  "exceptionCUList": [],\n  "eventCUList": [],\n  "mindCUList": [],\n  "entityDesignRights": {},\n  "entityTransactionRights": {},\n  "attributeDesignRights": {},\n  "attributeTransactionRights": {},\n  "cuType": "BASIC",\n  "specialFeatureProperties": {},\n  "slotItemData": {},\n  "name": "{{SolutionName}}",\n  "displayName": "{{SolutionName}}",\n  "agents": [\n    {\n      "agentType": "human"\n    }\n  ],\n  "superOrdinateCUList": [],\n  "membershipList": [],\n  "isReserved": false,\n  "status": "DRAFT",\n  "propertiesMap": {},\n  "cuSystemProperties": {},\n  "id": {{SolutionId1}},\n  "designTimeRights": [\n    {\n      "informationRight": true,\n      "decisionRight": true,\n      "executionRight": false,\n      "rightHolderId": {{CCORoleId}},\n      "rightHolderType": "ROLE",\n      "rightHolderName": "{{RoleCCO}}",\n      "disableParentRoleAccess": false\n    }\n  ],\n  "txnTimeRights": [\n    {\n      "informationRight": true,\n      "decisionRight": false,\n      "executionRight": true,\n      "rightHolderId": {{CCORoleId}},\n      "rightHolderType": "ROLE",\n      "rightHolderName": "{{RoleCCO}}",\n      "disableParentRoleAccess": false\n    }\n  ],\n  "masterId": {{SolutionId1}}\n}',
    headers: {
      "accept-language": "en",
      authorization: "{{BearerToken}}",
      "content-type": "application/json",
      accept: "application/json, text/plain, */*"
    },
    post(response) {
      pm.test("Check status code", function() {
        pm.expect(pm.response.code).to.eq(200);
        pm.expect(pm.response.json().message).to.eq(
          "GSI " +
            pm.variables.get("SolutionName") +
            " GSI Unit Id :" +
            pm.variables.get("SolutionId1") +
            " is successfully finished"
        );
        pm.expect(pm.response.json().result.status).to.eq("READY");
        pm.expect(pm.response.json().result.version).to.eq("1.0");
      });
    }
  });

  postman[Request]({
    name: "Send Notification for approval",
    id: "46b01360-8cc4-4dec-b046-57310a3e1a13",
    method: "POST",
    address:
      "https://{{TenantName}}.{{BaseURL}}/dsd-orch/v1/notifications/api/notification/send",
    data:
      '{\n  "actionableContent": {\n    "target_type": "Gsi",\n    "target_id": {{SolutionId1}},\n    "target_name": "{{SolutionName}}",\n    "context_cu": "",\n    "context_gsi": "",\n    "approvals": "true"\n  },\n  "title": "Review gsi",\n  "targetUserId": [\n    "{{UserCCO1}}@nslhub.com"\n  ],\n  "notificationChannels": [\n    "PUSH"\n  ],\n  "content": ""\n}',
    headers: {
      "accept-language": "en",
      authorization: "{{BearerToken}}",
      "content-type": "application/json",
      accept: "application/json, text/plain, */*"
    },
    post(response) {
      pm.test("Check status code", function() {
        pm.expect(pm.response.code).to.eq(200);
        pm.expect(pm.response.json().message).to.eq(
          "Notification sent successfully"
        );
      });
    }
  });
}
