// Auto-generated by the postman-to-k6 converter

import "./libs/shim/core.js";
import "./libs/shim/expect.js";

export let options = { maxRedirects: 4 };

const Pre = Symbol.for("pre");
const Request = Symbol.for("request");
postman[Symbol.for("initial")]({
  options,
  collection: {
    UserName: "Amandeep.goyal@nslhub.com",
    RoleId: "",
    SharedRole: "Random123",
    BookName: "BasicBook2022050910595455210",
    SolutionName: "BasicSolution2022050910595455210"
  },
  environment: {
    BaseURL: "qa3.nslhub.com",
    IamURL: "https://qaiam.nslhub.com",
    SuperAdminTenant: "Super-Admin",
    TenantName: "apiqa0504",
    TenantAdmin: "admin@nslhub.com",
    AdminPassword: "admin",
    CCORoleId: 1841833683818,
    RoleCCO: "CCO",
    UserCCOManager: "userccomanager",
    UserCCO: "usercco",
    UserCCOId: 322589991331,
    UserCCO1: "usercco1",
    UserCCO1Id: 1972120016659,
    CCHRoleId: 234529237640,
    RoleCCH: "CCH",
    UserCCH: "usercch",
    RoleCCA: "CCA",
    UserCCA: "usercca",
    Password: "test",
    BearerToken: "undefined undefined",
    TenantName2: "apiqaei0504",
    TenantAdmin2: "admin@nslhub.com",
    AdminPassword2: "admin",
    DsdFileStoreURL: "https://ava-nlg-dev.nslhub.com",
    RefreshToken: null,
    WaitTime: 30000,
    NUMBER: "",
    COUNT: "",
    UserCCOEmailId: "usercco@nslhub.com",
    UserCCO1EmailId: "usercco1@nslhub.com",
    UserCCOManagerEmailId: "userccomanager@nslhub.com",
    UserCCAId: 2044956951239,
    UserCCA1Id: 2043386291967,
    UserCCA1: "usercca1",
    CCARoleId: 368848764661,
    UserCCOManagerId: 2119243203126,
    UserCCH1: "usercch1",
    OuCCO: "oucco",
    OuCCOId: "191876919025",
    UserOuCCO: "useroucco",
    UserOuCCO1: "useroucco1",
    UserOuCCOId: 1657502426387,
    UserOuCCOId1: 668079088379,
    GN: "",
    SolutionPublisher: "SolutionPublisher",
    SolutionPublisherId: 824925532392,
    TenantNameStage: "apiqa0504stage",
    TenantNameProd: "apiqa0504prod",
    TenantNameStageClientId: "apiqa0504_staging",
    UserCCHId: 398151345508,
    TraceAuditRole: "auditdata",
    TraceAuditRoleId: 1873250222640,
    AuditDesigner: "auditdesigner",
    AuditDesignerId: 1139785560613,
    AuditReviewer: "auditreviewer",
    AuditReviewerId: 996441711937,
    AuditDesignerEmailId: "auditdesigner@nslhub.com",
    SuperAdminUserName: "platformadmin@nslhub.com",
    SuperAdminPassword: "padmin@123",
    SaasTenantName: "apiqasaas0802",
    SaasUserCCO: "usercco",
    SaasUserCCOId: "1173118793932",
    SaasTenantId: 28606,
    SuperAdminUserId: "-827185515",
    SuperAdminUser: "platformadmin",
    SaasRoleCCO: "CCO",
    SaasTenantAdmin: "admin@nslhub.com",
    SaasUserCCH: "usercch",
    SaasUserCCHId: "933373429905",
    SaasRoleCCH: "CCH",
    SaasUserCCA: "usercca",
    SaasUserCCAId: "1588750292491",
    SaasRoleCCA: "CCA",
    RoleManager: "Manager",
    ManagerRoleId: 829265664407,
    RoleEmployee: "Employee",
    EmployeeRoleId: 2040409113899,
    RoleFinance: "Finance",
    FinanceRoleId: 1764637492961,
    TenantAdminId: 894878720178,
    Tenant2AdminId: 1597011094011,
    T2UserCCOId: 1386113498793,
    T2CCORoleId: 239407227356,
    EmployeeUser: "employeeuser",
    EmployeeUserId: 1917645633263,
    FinanceUser: "financeuser",
    FinanceUserId: 820077520635,
    FinanceUser1: "financeuser1",
    FinanceUserId1: "1192769182955",
    EmployeeUser1: "employeeuser1",
    EmployeeUserId1: "1228497924811",
    ManagerUser: "manageruser",
    ManagerUserId: 1732001198107,
    ManagerUser1: "manageruser1",
    ManagerUserId1: "897141596215",
    UserCCHEmailId: "usercch@nslhub.com",
    UserCCAEmailId: "usercca@nslhub.com",
    UserCCA1EmailId: "usercca1@nslhub.com",
    UserCCH1EmailId: "usercch1@nslhub.com",
    UserCCH1Id: 632745185759,
    SAASAdminUserId: "242233047416",
    SaasUserCCO1Id: "464692553728",
    SaasUserCCOManagerId: "202094916017",
    ManagerUser1Id: 1989195344420,
    FinanceUser1Id: 1829479253660,
    EmployeeUser1Id: 1178159858335,
    T2UserCCO1Id: 878542497800,
    StageAdmin: "stageadmin@nslhub.com",
    UserCCC: "userccc",
    UserCCC1: "userccc1",
    UserCCCManager: "usercccmanager",
    RoleSolutionCustomizer: "SolutionCustomizer",
    UserCCCId: "668849564311",
    UserCCC1Id: "1607519294012",
    SolutionCustomizerRoleId: "639989182448",
    T3UserCCO1Id: 405650278408,
    Tenant3AdminId: 982435399574,
    T3UserCCOId: 1424682699760,
    T3CCORoleId: 129071126100,
    TenantName3: "apiqa3ten0604",
    REVIEW_WAITTIME: "5000",
    UserCCOEncryptedPassword:
      "J8JAIlEDnLvsHzljoQJ4VcWCdcVNJTYzWlc7yZaTRcH5roLNs6trxwD+Ax/XCy3UvJzxSDNLVaa2a7YVcVddeHC6oXuFMf0pNxYWTGi4Tl+ha36Y0DPd4VBFeqvRfDvB2UnUSR+vfIJ56c8SNe0E644yjrCwxXWqAE2B0jTQgfA=",
    TenantAdminEncryptedPassword:
      "DRvI9/JkLbPgrwPepaVkJwRN9Zts4u09mL6fOg3OwIg84c7XRkqwEVQx0tbfo42Kuiaiw3dbvMfd4eQUG9AXg6zdZtsrGnz+/+Ik5gdkSO3npvFCSq/6GEgQERPNEqNfwQODLphZfmkxr87LayYQ+3up+2Umi+4RG0pxVb8g3sM="
  }
});

export default function() {
  postman[Pre].push(() => {
    let json = {
      id: 2148143410395,
      createdAt: 1650951442555,
      updatedAt: 1650951442555,
      orgUnitId: 1048774332110,
      name: "Amandeep.goyal@nslhub.com",
      email: "Amandeep.goyal@nslhub.com",
      mobileNumber: "7019356279",
      isEnabled: true,
      roles: [
        {
          id: 1118115121063,
          createdAt: 1649163005001,
          updatedAt: 1652095461019,
          name: " Employee",
          description: "",
          isEnabled: true,
          isAdmin: false,
          tagId: 1892314879594,
          roleType: "LOCAL"
        }
      ],
      groups: [],
      customID: "28246",
      autoCustomID: "28246"
    };
    pm.variables.set("UserDetails", JSON.stringify(json));
    let bookId = 1421739491964;
    pm.variables.set("BookId", bookId);
    let solutionId = 1007437723886;
    pm.variables.set("SolutionId", solutionId);
  });

  postman[Request]({
    name: "Login as usercco",
    id: "32b59f58-2e2a-493e-b495-fa88e7b9d804",
    method: "POST",
    address:
      "https://{{TenantName}}.{{BaseURL}}/dsd-orch/nsl-iam/api/login/v2/login-action",
    data:
      '{\n    "userName": "{{UserCCO}}",\n    "encryptedPassword": "{{UserCCOEncryptedPassword}}",\n    "tenantName": "{{TenantName}}",\n    "clientId": "{{TenantName}}"\n}',
    headers: {
      Accept: "application/json, text/plain, */*",
      "Content-Type": "application/json",
      "Accept-Language": "en"
    },
    post(response) {
      pm.test("Check status code", function() {
        pm.expect(pm.response.code).to.eq(200);
      });

      pm.environment.set(
        "BearerToken",
        pm.response.json().result.token_type +
          " " +
          pm.response.json().result.access_token
      );
      pm.environment.set(
        "RefreshToken",
        pm.response.json()["result"]["refresh_token"]
      );
    }
  });

  postman[Request]({
    name: "Get Book Tree By Id",
    id: "64b86c28-827c-48cb-afc3-1b2e0ceecf1e",
    method: "GET",
    address:
      "https://{{TenantName}}.{{BaseURL}}/dsd-orch/nsl-iam/api/roles/getBookTreeById?id={{BookId}}&roleId={{RoleId}}&searchCriteria=",
    headers: {
      "accept-language": "en",
      authorization: "{{BearerToken}}",
      "content-type": "application/json",
      accept: "application/json, text/plain, */*"
    },
    post(response) {
      pm.test("Check status code", function() {
        pm.expect(pm.response.code).to.eq(200);
        pm.expect(pm.response.json().bookId).to.eq(
          `${pm.variables.get("BookId")}`
        );
        pm.expect(pm.response.json().bookName).to.eq(
          pm.variables.get("BookName")
        );
        pm.expect(pm.response.json().solDtos[0].gsiName).to.eq(
          pm.variables.get("SolutionName")
        );
        pm.expect(pm.response.json().solDtos[0].gsiId).to.eq(
          `${pm.variables.get("SolutionId")}`
        );
      });
    }
  });

  postman[Request]({
    name: "Fetch by username",
    id: "679bc8d4-3823-4e3b-8917-ec0d977e6439",
    method: "POST",
    address:
      "https://{{TenantName}}.{{BaseURL}}/dsd-orch/nsl-iam/api/user/getAllUsersBySearchTerm?pageNumber=0&pageSize=10&searchTerm={{UserName}}&isActive=false",
    data: "{}",
    headers: {
      authorization: "{{BearerToken}}",
      "Accept-Language": "en"
    },
    post(response) {
      pm.test("Status code is 200", function() {
        pm.response.to.have.status(200);
      });
    }
  });

  postman[Request]({
    name: "Update Local Role & Attact to Book",
    id: "00f27ff2-6eb2-4c48-a738-e749f070a07a",
    method: "POST",
    address:
      "https://{{TenantName}}.{{BaseURL}}/dsd-orch/nsl-iam/api/roles/createRoleAndAttachToBooks?bklist={{BookId}}",
    data:
      '{\r\n    "id": {{RoleId}},\r\n    "createdAt": {{CreatedAt}},\r\n    "updatedAt": {{UpdatedAt}},\r\n    "name": "{{RoleName}}",\r\n    "description": "",\r\n    "isEnabled": true,\r\n    "isAdmin": false,\r\n    "tagId": {{TagId}},\r\n    "users": [\r\n        {{UserDetails}}\r\n    ],\r\n    "groups": []\r\n}',
    headers: {
      "accept-language": "en",
      authorization: "{{BearerToken}}",
      "content-type": "application/json",
      accept: "application/json, text/plain, */*"
    },
    pre() {
      let role = {
        id: 1118115121063,
        createdAt: 1649163005001,
        updatedAt: 1652095461019,
        name: " Employee",
        description: "",
        isEnabled: true,
        isAdmin: false,
        tagId: 1892314879594,
        roleType: "LOCAL"
      };
      pm.variables.set("RoleId", role.id);
      pm.variables.set("RoleName", role.name);
      pm.variables.set("TagId", role.tagId);
      pm.variables.set("CreatedAt", role.createdAt);
      pm.variables.set("UpdatedAt", role.updatedAt);
    },
    post(response) {
      pm.test("Check status code", function() {
        pm.expect(pm.response.code).to.eq(200);
        pm.expect(pm.response.json().message).to.eq(
          "Role updated successfully"
        );
      });
    }
  });

  postman[Request]({
    name: "Get Role Details - Local Role",
    id: "0cd50d34-3378-467a-b0e4-1ac7b3028e28",
    method: "POST",
    address:
      "https://{{TenantName}}.{{BaseURL}}/dsd-orch/nsl-iam/api/roles/getB2cRoles?pageNumber=0&pageSize=10",
    data: '{"isActive":true,"roleName":"{{RoleName}}"}',
    headers: {
      authority: "b2c.qa3.nslhub.com",
      "sec-ch-ua":
        '" Not A;Brand";v="99", "Chromium";v="96", "Google Chrome";v="96"',
      traceparent: "00-670b399b03706ec4dfe80007a4bc49a7-42c17ed83ad5cbca-01",
      "accept-language": "en",
      "sec-ch-ua-mobile": "?0",
      authorization: "{{BearerToken}}",
      "content-type": "application/json",
      accept: "application/json, text/plain, */*",
      "user-agent":
        "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.110 Safari/537.36",
      "sec-ch-ua-platform": '"Windows"',
      origin: "https://b2c.qa3.nslhub.com",
      "sec-fetch-site": "same-origin",
      "sec-fetch-mode": "cors",
      "sec-fetch-dest": "empty",
      referer: "https://b2c.qa3.nslhub.com/admin/viewLocalRole",
      cookie: "_ga=GA1.2.1007264212.1627288780"
    },
    pre() {
      pm.variables.set("RoleId", "1118115121063");
      pm.variables.set("RoleName", " Employee");
    },
    post(response) {
      pm.test("Check status code", function() {
        pm.expect(pm.response.code).to.eq(200);
        let isValid = false;
        pm.response.json().rolesList.forEach(roleName => {
          if (
            roleName.id == pm.variables.get("RoleId") &&
            roleName.name == pm.variables.get("RoleName")
          ) {
            pm.variables.set("TagId", roleName.tagId);
            pm.variables.set("CreatedAt", roleName.createdAt);
            pm.variables.set("UpdatedAt", roleName.updatedAt);
            isValid = true;
          }
        });
        pm.expect(isValid).to.eq(true);
      });
    }
  });

  postman[Request]({
    name: "Save Irdr's",
    id: "a29286ef-c033-4141-a1f7-7ceb1610ae00",
    method: "POST",
    address:
      "https://{{TenantName}}.{{BaseURL}}/dsd-orch/nsl-iam/api/user/saveIRDRs",
    data:
      '[\r\n    {\r\n        "bookId": {{BookId}},\r\n        "design": true,\r\n        "gsiId": "{{SolutionId}}",\r\n        "irdr": {\r\n            "decisionRight": true,\r\n            "disableParentRoleAccess": false,\r\n            "executionRight": false,\r\n            "informationRight": true,\r\n            "rightHolderId": {{RoleId}},\r\n            "rightHolderName": "{{RoleName}}",\r\n            "rightHolderType": "ROLE"\r\n        }\r\n    },\r\n    {\r\n        "bookId": {{BookId}},\r\n        "design": false,\r\n        "gsiId": "{{SolutionId}}",\r\n        "irdr": {\r\n            "decisionRight": false,\r\n            "disableParentRoleAccess": false,\r\n            "executionRight": true,\r\n            "informationRight": true,\r\n            "rightHolderId": {{RoleId}},\r\n            "rightHolderName": "{{RoleName}}",\r\n            "rightHolderType": "ROLE"\r\n        }\r\n    }\r\n]',
    headers: {
      "accept-language": "en",
      authorization: "{{BearerToken}}",
      "content-type": "application/json",
      accept: "application/json, text/plain, */*"
    },
    pre() {
      pm.variables.set("RoleId", "1118115121063");
      pm.variables.set("RoleName", " Employee");
    },
    post(response) {
      pm.test("Check status code", function() {
        pm.expect(pm.response.code).to.eq(200);
        pm.expect(pm.response.json().message).to.eq("IRDRs Successfully Saved");
      });
    }
  });

  postman[Request]({
    name: "Get Book Role Tree",
    id: "26f39239-3ef9-4215-887d-86c7515a4c30",
    method: "GET",
    address:
      "https://{{TenantName}}.{{BaseURL}}/dsd-orch/nsl-iam/api/roles/getBookRoleTree/{{BookId}}",
    headers: {
      "accept-language": "en",
      authorization: "{{BearerToken}}",
      "content-type": "application/json",
      accept: "application/json, text/plain, */*"
    },
    pre() {
      pm.variables.set("RoleName", "Fc4SyFfp0Q");
      pm.variables.set("RoleId", "17642430179");
    },
    post(response) {
      pm.test("Check status code", function() {
        pm.expect(pm.response.code).to.eq(200);

        let isValid = false;
        pm.response.json().forEach(roleName => {
          if (
            roleName.id == pm.variables.get("RoleId") &&
            roleName.name == pm.variables.get("RoleName")
          ) {
            pm.variables.set("TagId", roleName.tagId);
            pm.variables.set("CreatedAt", roleName.createdAt);
            pm.variables.set("UpdatedAt", roleName.updatedAt);
            isValid = true;
          }
        });
        pm.expect(isValid).to.eq(true);
      });
    }
  });

  postman[Request]({
    name: "Get B2C Shared Notifications",
    id: "896335b9-3047-4da3-ae07-5e76ee927f67",
    method: "GET",
    address:
      "https://{{TenantName}}.{{BaseURL}}/dsd-orch/nsl-iam/api/b2c/getB2CSharedNotifications",
    headers: {
      "accept-language": "en",
      authorization: "{{BearerToken}}",
      "content-type": "application/json",
      accept: "application/json, text/plain, */*"
    },
    post(response) {
      pm.test("Verify basic solution is published successfully", function() {
        pm.expect(pm.response.code).to.eq(200);
        pm.expect(pm.response.json().message).to.eq(
          `B2C Space notifications fetched successfully`
        );
        pm.expect(pm.response.json().result.length > 0).to.eq(true);
      });
    }
  });

  postman[Request]({
    name: "Add User To Space -> Send Invitation",
    id: "c89d40f0-def2-40c8-b9b1-78aa823fc493",
    method: "POST",
    address:
      "https://{{TenantName}}.{{BaseURL}}/dsd-orch/nsl-iam/api/roles/addUserstoSpace",
    data:
      '{\r\n    "bookId": {{BookId}},\r\n    "userList": [\r\n        {\r\n            "email": "{{UserCCO1EmailId}}",\r\n            "name": "{{UserCCO1}}",\r\n            "isEnabled": false\r\n        }\r\n    ]\r\n}',
    headers: {
      "accept-language": "en",
      authorization: "{{BearerToken}}",
      "content-type": "application/json",
      accept: "application/json, text/plain, */*"
    },
    post(response) {
      pm.test("Verify basic solution is published successfully", function() {
        pm.expect(pm.response.code).to.eq(200);
        pm.expect(pm.response.json().message).to.eq(`Invitation sent !`);
        pm.expect(pm.response.json().result).to.eq(true);
      });
    }
  });

  postman[Request]({
    name: "CCA Role ID Getting",
    id: "3fb66391-c4e1-4d8a-9930-e193c02b5ae9",
    method: "POST",
    address:
      "https://{{TenantName2}}.{{BaseURL}}/dsd-orch/nsl-iam/api/roles/getAllRoles?pageNumber=0&pageSize=10",
    data: '{"isActive":true,"roleName":""}',
    headers: {
      authority: "apiqaei0802.qa3.nslhub.com",
      accept: "application/json, text/plain, */*",
      "accept-language": "EN",
      authorization: "{{BearerToken}}",
      "content-type": "application/json",
      origin: "https://apiqaei0802.qa3.nslhub.com",
      referer:
        "https://apiqaei0802.qa3.nslhub.com/mylibrary/bet-configuration/eyJzb2x1dGlvblR5cGUiOiJwcmVtaXVtIiwibm9PZlNvbHV0aW9ucyI6MSwibm9PZkVudGl0aWVzIjoxLCJpc0Jvb2tBZGRlZCI6ZmFsc2UsImlzRG93bmxvYWRlZCI6ZmFsc2UsImlzU3Vic2NyaWJlZCI6ZmFsc2UsInVwZ3JhZGVBdmFpbGFibGUiOmZhbHNlLCJtYXJrZXRwbGFjZUlkIjp7ImFwcHJvdmVyTWV0YUlkIjoiNjI1M2MxYWFlYzUxMWMzZTM0OTI1ZTJjIiwicHVibGlzaGVySWQiOiJTYW1wbGUiLCJkc2RJZCI6IjYyNTNjMWFhMzYzOGJiN2M1YWRjMWU0ZCIsInR5cGUiOiJCT09LIiwiaWQiOjQzODc4MDA1NzIxLCJib29rRHNkSWQiOiI2MjUzYzFhYTM2MzhiYjdjNWFkYzFlNGQiLCJuc2xMaWJyYXJ5QXBwbGljYXRpb25OYW1lIjoiQ29uZmxpY3QgMTEwNCBCb29rIiwibnNsTGlicmFyeUFwcGxpY2F0aW9uVmVyc2lvbiI6IjEiLCJ0ZW5hbnRJZCI6ImFwaXFhMDEwOSIsIm5zbExpYnJhcnlNYXN0ZXJJZCI6MTI4ODQzNjYzNjY0N30sImRzZElkIjoiNjI1M2MxYWEzNjM4YmI3YzVhZGMxZTRkIiwibmFtZSI6IkNvbmZsaWN0IDExMDQgQm9vayIsImRpc3BsYXlOYW1lIjoiQ29uZmxpY3QgMTEwNCBCb29rIiwiZGVzY3JpcHRpb24iOiJDb25mbGljdCAxMTA0IEJvb2siLCJvbnRvbG9neSI6W3siaWQiOiJjb21tb24iLCJuYW1lIjoiY29tbW9uIiwiZGlzcGxheU5hbWUiOiJDb21tb24iLCJsZXZlbCI6MSwiaXNWYWxpZGF0ZWQiOmZhbHNlfSx7ImlkIjoiY29tbW9uLmZpbmFuY2VDb21tb24iLCJuYW1lIjoiZmluYW5jZUNvbW1vbiIsImRpc3BsYXlOYW1lIjoiRmluYW5jZSAmIEFjY291bnRpbmciLCJsZXZlbCI6MiwiaXNWYWxpZGF0ZWQiOmZhbHNlfSx7ImlkIjoiY29tbW9uLmZpbmFuY2VDb21tb24uYmFua2luZyIsIm5hbWUiOiJiYW5raW5nIiwiZGlzcGxheU5hbWUiOiJCYW5raW5nIiwibGV2ZWwiOjMsImlzVmFsaWRhdGVkIjpmYWxzZX0seyJpZCI6ImNvbW1vbi5maW5hbmNlQ29tbW9uLmJhbmtpbmcuYXJyZWFycyIsIm5hbWUiOiJhcnJlYXJzIiwiZGlzcGxheU5hbWUiOiJBcnJlYXJzIiwibGV2ZWwiOjQsImlzVmFsaWRhdGVkIjpmYWxzZX1dLCJwdWJsaXNoZXIiOnsiaWQiOiJTYW1wbGUiLCJuYW1lIjoiU2FtcGxlIiwiZW1haWwiOlsiYW1ldGkubGlraGl0aEBuc2xodWIuY29tIl0sImNvbnRhY3ROdW1iZXIiOlsiOTU2MTUyNjM4MSJdLCJhZGRyZXNzIjpbIkh5ZCJdLCJ3ZWJzaXRlTGluayI6InNhbXBsZS5jb20ifSwiaXNSZXNlcnZlZCI6ZmFsc2UsIm1hc3RlcklkIjo0Mzg3ODAwNTcyMSwidmVyc2lvbiI6IjEuMCIsInN0YXR1cyI6IkRSQUZUIn0",
      "sec-ch-ua":
        '" Not A;Brand";v="99", "Chromium";v="100", "Google Chrome";v="100"',
      "sec-ch-ua-mobile": "?0",
      "sec-ch-ua-platform": '"Windows"',
      "sec-fetch-dest": "empty",
      "sec-fetch-mode": "cors",
      "sec-fetch-site": "same-origin",
      "user-agent":
        "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.75 Safari/537.36"
    },
    post(response) {
      pm.variables.set("CCARoleIdMapping", pm.response.json().rolesList[1].id);
    }
  });

  postman[Request]({
    name: "Get All Assigned Users - 0 User - For OrgUnits",
    id: "2c28c78f-2d59-4b5c-a29d-997d03217642",
    method: "GET",
    address:
      "https://{{TenantName}}.{{BaseURL}}/dsd-orch/nsl-iam/api/orgUnits/page/matching/assignedusers?orgUnitId={{OrgUnitId}}&pageNo=0&pageSize=10&searchCriteria=s",
    headers: {
      "accept-language": "en",
      "sec-ch-ua-mobile": "?0",
      authorization: "{{BearerToken}}",
      "content-type": "application/json"
    },
    pre() {
      pm.variables.set("OrgUnitId", 1367783128912);
    },
    post(response) {
      pm.test("Check status code", function() {
        pm.expect(pm.response.code).to.eq(200);
        pm.expect(pm.response.json().result.content.length).to.eq(0);
      });
    }
  });

  postman[Request]({
    name: "UpdateEnableUser",
    id: "5124ecb2-c5da-4079-ba9b-12b4df9ce891",
    method: "POST",
    address:
      "https://{{TenantName}}.{{BaseURL}}/dsd-orch/nsl-iam/api/user/update/user?type=graph&userId={{UserId1}}",
    data:
      '{\r\n    "name": "{{UserName}}",\r\n    "email": "{{Email}}",\r\n    "isEnabled": true,\r\n    "roles": [\r\n        {\r\n            "id": {{RoleId}}\r\n        }\r\n    ],\r\n    "manager": {\r\n        "id": {{managerId1}}\r\n    }\r\n}',
    headers: {
      authorization: "{{BearerToken}}",
      "Accept-Language": "en",
      "Content-Type": "application/json"
    },
    pre() {
      pm.variables.set("UserId1", 1701107834287);
      pm.variables.set("Email", "Abdul.kalam@nslhub.com");
      pm.variables.set("UserName", "Abdul.kalam@nslhub.com");
      pm.variables.set("managerId1", 2119243203126);
      pm.variables.set("RoleId", 1281586869929);
    },
    post(response) {
      pm.test("Status code is 200", function() {
        pm.response.to.have.status(200);
        pm.expect(pm.response.json().message).to.eq(
          "Requested user updated successfully"
        );

        pm.expect(pm.response.json().result.isEnabled).to.eq(true);
      });
    }
  });

  postman[Request]({
    name: "getActiveUser GET",
    id: "fdafe2c4-4b34-4d2b-8dbc-c79bb01cc256",
    method: "GET",
    address:
      "https://{{TenantName}}.{{BaseURL}}/dsd-orch/nsl-iam/api/user/getActiveUser",
    headers: {
      "accept-language": "en",
      authorization: "{{BearerToken}}",
      "content-type": "application/json"
    },
    post(response) {
      pm.test("Check For Status Code", function() {
        pm.expect(pm.response.code).to.eq(200);
      });

      pm.test("Check Response Values", function() {
        pm.expect(pm.response.json().id).to.eq(
          parseInt(pm.environment.get("UserCCOId"))
        );
        pm.expect(pm.response.json().name).to.eq(pm.environment.get("UserCCO"));
        pm.expect(pm.response.json().isEnabled).to.eq(true);
        pm.expect(pm.response.json().roles.length > 0).to.eq(true);
        pm.expect(pm.response.json().manager.name).to.eq(
          pm.environment.get("UserCCOManager")
        );
        pm.expect(pm.response.json().manager.id).to.eq(
          parseInt(pm.environment.get("UserCCOManagerId"))
        );

        let isRoleExists = false;

        pm.response.json().roles.forEach(role => {
          if (
            role.name == pm.environment.get("RoleCCO") &&
            role.id == pm.environment.get("CCORoleId") &&
            role.isEnabled == true
          ) {
            isRoleExists = true;
          }
        });

        pm.expect(isRoleExists).to.eq(true);

        pm.expect(pm.response.json().planNFeatureMapping.active).to.eq(true);
      });
    }
  });

  postman[Request]({
    name: "Login as tenant admin",
    id: "2d80c629-a4a9-4898-a0b5-920870ef622d",
    method: "POST",
    address:
      "https://{{TenantName}}.{{BaseURL}}/dsd-orch/nsl-iam/api/login/v2/login-action",
    data:
      '{\n    "userName": "{{TenantAdmin}}",\n    "encryptedPassword": "{{TenantAdminEncryptedPassword}}",\n    "tenantName": "{{TenantName}}",\n    "clientId": "{{TenantName}}"\n}',
    headers: {
      Accept: "application/json, text/plain, */*",
      "Content-Type": "application/json",
      "Accept-Language": "en"
    },
    post(response) {
      pm.test("Check status code", function() {
        pm.expect(pm.response.code).to.eq(200);
      });

      pm.environment.set(
        "TenantAdminBearerToken",
        pm.response.json().result.token_type +
          " " +
          pm.response.json().result.access_token
      );
      pm.environment.set(
        "TenantAdminRefreshToken",
        pm.response.json()["result"]["refresh_token"]
      );
    }
  });

  postman[Request]({
    name: "Create role",
    id: "402b01f1-698d-4d54-93d7-3b79a3898fbe",
    method: "POST",
    address:
      "https://{{TenantName}}.{{BaseURL}}/dsd-orch/nsl-iam/api/roles/save",
    data:
      '{\n    "name": "{{RoleName}}",\n    "isEnabled": true,\n    "isAdmin": false,\n    "users": [],\n    "groups": [],\n    "description": "{{RoleDescription}}"\n}',
    headers: {
      "accept-language": "en",
      authorization: "{{TenantAdminBearerToken}}",
      "content-type": "application/json",
      accept: "application/json, text/plain, */*",
      "sec-fetch-site": "same-origin",
      "sec-fetch-mode": "cors",
      "sec-fetch-dest": "empty"
    },
    pre() {
      pm.variables.set(
        "RandomNumber",
        new Date()
          .toISOString()
          .replace(/[^0-9]/g, "")
          .slice(0, -3) +
          "" +
          Math.floor(Math.random() * 100000 + 1)
      );

      pm.variables.set(
        "RoleName",
        "NewRole" + pm.variables.get("RandomNumber")
      );
      pm.variables.set(
        "RoleDescription",
        "NewRoleDesc" + pm.variables.get("RandomNumber")
      );
    },
    post(response) {
      pm.test("Check status code", function() {
        pm.expect(pm.response.code).to.eq(200);
      });
      pm.test("Check response", function() {
        pm.expect(pm.response.json().message).to.eq(
          "Role created successfully"
        );
        pm.expect(pm.response.json().result.name).to.eq(
          pm.variables.get("RoleName")
        );
      });
      pm.variables.set("RoleID", pm.response.json().result.id);
    }
  });

  postman[Request]({
    name: "Get Root OrgUnit Details",
    id: "c1213bbd-5aad-4a4c-99be-c944e8dfdccc",
    method: "POST",
    address:
      "https://{{TenantName}}.{{BaseURL}}/dsd-orch/nsl-iam/api/orgUnits/getAllOrgUnits?pageNumber=0&pageSize=10&searchCriteria=root",
    data: "[]",
    headers: {
      "accept-language": "en",
      "sec-ch-ua-mobile": "?0",
      authorization: "{{TenantAdminBearerToken}}",
      "content-type": "application/json"
    },
    post(response) {
      pm.test("Check status code", function() {
        pm.expect(pm.response.code).to.eq(200);
        pm.expect(pm.response.json().result.content.length).to.eq(1);
        pm.variables.set(
          "RootOrgUnitId",
          pm.response.json().result.content[0].id
        );
        pm.variables.set(
          "RootOrgUnitName",
          pm.response.json().result.content[0].name
        );
      });
    }
  });

  postman[Request]({
    name: "Add User to OrgUnit",
    id: "0e15d75d-a811-4e7c-abae-bd2b050cf1e9",
    method: "POST",
    address:
      "https://{{TenantName}}.{{BaseURL}}/dsd-orch/nsl-iam/api/orgUnits/users?orgUnitId={{OrgUnitId}}",
    data: "[\r\n   {{UserDetails}}\r\n]",
    headers: {
      "accept-language": "en",
      "sec-ch-ua-mobile": "?0",
      authorization: "{{TenantAdminBearerToken}}",
      "content-type": "application/json"
    },
    pre() {
      pm.variables.set("OrgUnitId", 198265232809);

      let json = {
        id: 2148143410395,
        createdAt: 1650951442555,
        updatedAt: 1650951442555,
        orgUnitId: 1048774332110,
        name: "Amandeep.goyal@nslhub.com",
        email: "Amandeep.goyal@nslhub.com",
        mobileNumber: "7019356279",
        isEnabled: true,
        roles: [
          {
            id: 1118115121063,
            createdAt: 1649163005001,
            updatedAt: 1652095461019,
            name: " Employee",
            description: "",
            isEnabled: true,
            isAdmin: false,
            tagId: 1892314879594,
            roleType: "LOCAL"
          }
        ],
        groups: [],
        customID: "28246",
        autoCustomID: "28246"
      };
      pm.variables.set("UserDetails", JSON.stringify(json));
      pm.variables.set("RdfUserId", 2148143410395);
    },
    post(response) {
      pm.test("Check status code", function() {
        pm.expect(pm.response.code).to.eq(200);
      });
      pm.test("Check response", function() {
        pm.expect(pm.response.json().message).to.eq("users added to org unit");
        pm.expect(pm.response.json().result[0].id).to.eq(
          pm.variables.get("RdfUserId")
        );
      });
    }
  });

  postman[Request]({
    name: "Create Org Unit",
    id: "7fb08851-5e27-46f3-bde8-899b0cf1c9ab",
    method: "POST",
    address:
      "https://{{TenantName}}.{{BaseURL}}/dsd-orch/nsl-iam/api/orgUnits/save",
    data:
      '{\r\n    "name": "{{OrgUnitName}}",\r\n    "isEnabled": true,\r\n    "description": "{{OrgUnitName}}"\r\n}',
    headers: {
      "accept-language": "en",
      "sec-ch-ua-mobile": "?0",
      authorization: "{{TenantAdminBearerToken}}",
      "content-type": "application/json"
    },
    pre() {
      pm.variables.set(
        "RandomNumber",
        new Date()
          .toISOString()
          .replace(/[^0-9]/g, "")
          .slice(0, -3) +
          "" +
          Math.floor(Math.random() * 100000 + 1)
      );

      pm.variables.set(
        "OrgUnitName",
        "OrgUnit" + pm.variables.get("RandomNumber")
      );
    },
    post(response) {
      pm.test("Check status code", function() {
        pm.expect(pm.response.code).to.eq(200);
      });
      pm.test("Check response", function() {
        pm.expect(pm.response.json().message).to.eq(
          "OrgUnit created successfully"
        );
        pm.expect(pm.response.json().result.name).to.eq(
          pm.variables.get("OrgUnitName")
        );
        pm.expect(pm.response.json().result.isEnabled).to.eq(true);
        pm.expect(pm.response.json().result.parentOrgUnit.name).to.eq("root");
        pm.variables.set("OrgUnitId", pm.response.json().result.id);
        pm.variables.set(
          "ParentOrgUnitDetails",
          JSON.stringify(pm.response.json().result.parentOrgUnit)
        );
      });
    }
  });

  postman[Pre].pop();
}
